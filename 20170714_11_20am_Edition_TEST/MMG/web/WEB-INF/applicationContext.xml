<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

   <!-- This is the main Spring Configuration File and will be responsible for Initializing the SPRING FRAMEWORK -->

<!-- This Configuration will be responsibiel for finding the ASYNC tasks available in the source code -->
    <task:annotation-driven/>
    <context:component-scan base-package="com.mazdausa" />
    <context:component-scan base-package="com.emm" />

    <!-- Exporting the JMX Beans present if any in the Code -->
    <context:mbean-export/>


 <!-- This section will be responsible for loading all the properties file that will be required in the Project -->

    <beans:bean id="propertyConfigurer" class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
        <beans:constructor-arg ref="configurationEncryptor" />
        <beans:property name="locations">
            <beans:list>
                <beans:value>file:${MMG_HOME}/mmg_${emm.environment}.properties</beans:value>
                <beans:value>file:${MMG_HOME}/emm_${emm.environment}.properties</beans:value>
                <beans:value>file:${MMG_HOME}/db_${emm.environment}.properties</beans:value>
            </beans:list>
        </beans:property>
        <!-- This will make sure, that the configurer won't fail if it doesn't find a property -->
        <beans:property name="ignoreUnresolvablePlaceholders" value="true"/>
        <beans:property name="systemPropertiesMode">
            <beans:value>2</beans:value>
        </beans:property>

    </beans:bean>

<!-- Configuring the Enviroment Variables Configuration for the Password Encryption -->
    <beans:bean id="environmentVariablesConfiguration"  class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
        <beans:property name="algorithm" value="PBEWithMD5AndDES" />
    <!-- Here the Property is being passed as a system property by embedding the property in Catalina.properties file -->
        <beans:property name="passwordSysPropertyName" value="MMG_DB_PASSWORD" />
    <!-- The Below property needs to be enabled only when we are storing the password in an Environment variable -->
    <!--<beans:property name="passwordEnvName" value="MMG_DB_PASSWORD" /> -->
    <!-- The Below property needs to be enabled directly if we are embedding the password directly in the COnfiguration file -->
    <!--<beans:property name="password" value="mmg"/> -->
    </beans:bean>


     <!-- Configuring the Configuration Encryptor -->
    <beans:bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <beans:property name="config" ref="environmentVariablesConfiguration" />
    </beans:bean>

  
    <!-- Configuring all the Message that are to be used, if any in the Application -->
    <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename" value="/WEB-INF/messages" />
        <beans:property name="cacheSeconds" value="1000" />
    </beans:bean>

    <!-- This XML will be responsible for loading for the DB specific components in the Spring COntainer -->
    <beans:import resource="application-dao.xml"/>

    <!-- This XML will be responsible for loading for the Logging Specific DB specific components in the Spring COntainer -->
    <beans:import resource="application-logdao.xml"/>

    <!-- THis XML File will be responsible for adding the Caching Specific things in the Application -->
    <beans:import resource="application-cache.xml"/>

    <!-- THis XML File will be responsible for initiating all the beans which are required for calling all REST Based web services.  -->
    <beans:import resource="application-mmg-rest-services.xml"/>

    <!-- THis XML File will be responsible for initiating all the beans which are required for calling all SOAP Based web services.  -->
    <beans:import resource="application-soap-services.xml"/>

    <!-- This XML will be responsible for loading the HTTP Specific Security thing in the  Spring COntainer  -->
    <beans:import resource="application-security.xml"/>

    <!-- The XML File will be responsible for containing all the BATCH PROCESS Related Information -->
    <beans:import resource="application-batchprocess.xml"/>

    <!-- The XML File will be responsible for containing all the application email related info-->
    <beans:import resource="application-mail.xml"/>



    <!-- Initialization of Transaction Manager -->
     <tx:annotation-driven transaction-manager="transactionManager" />


</beans:beans>
